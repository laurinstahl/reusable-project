{"ast":null,"code":"var _jsxFileName = \"/Users/laurinstahl/Documents/projects/reusable-project/app/src/theme/molecules/Card.jsx\";\nimport { ChakraProvider, Box, Button, Divider, Flex, Stack, StackDivider, Text, useColorModeValue as mode } from '@chakra-ui/react';\nimport * as React from 'react';\nimport { HiPlus } from 'react-icons/hi';\nimport { Description } from '../components/Description';\nimport { theme } from '../index';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = props => {\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      ...props,\n      as: \"section\",\n      py: \"12\",\n      bg: mode('gray.100', 'gray.800'),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        maxW: {\n          base: 'xl',\n          md: '7xl'\n        },\n        mx: \"auto\",\n        px: {\n          md: '8'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          rounded: {\n            lg: 'lg'\n          },\n          bg: mode('white', 'gray.700'),\n          maxW: \"3xl\",\n          mx: \"auto\",\n          shadow: \"base\",\n          overflow: \"hidden\",\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            justify: \"space-between\",\n            px: \"6\",\n            py: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              as: \"h3\",\n              fontWeight: \"bold\",\n              fontSize: \"lg\",\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), props.buttonText && /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              onClick: props.clickFunction,\n              minW: \"20\",\n              leftIcon: /*#__PURE__*/_jsxDEV(HiPlus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 116\n              }, this),\n              children: props.buttonText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: \"6\",\n            py: \"5\",\n            px: \"8\",\n            divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 55\n            }, this),\n            children: props.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nCard.propTypes = {\n  title: PropTypes.string,\n  buttonText: PropTypes.string,\n  clickFunction: PropTypes.func,\n  children: PropTypes.node\n};\nCard.defaultProps = {\n  title: \"Default Title\"\n};\nvar _c;\n$RefreshReg$(_c, \"Card\");\nCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Card\",\n  \"props\": {\n    \"title\": {\n      \"defaultValue\": {\n        \"value\": \"\\\"Default Title\\\"\",\n        \"computed\": false\n      },\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false\n    },\n    \"buttonText\": {\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false\n    },\n    \"clickFunction\": {\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false\n    },\n    \"children\": {\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false\n    }\n  }\n};\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/theme/molecules/Card.jsx\"] = {\n    name: \"Card\",\n    docgenInfo: Card.__docgenInfo,\n    path: \"src/theme/molecules/Card.jsx\"\n  };\n}","map":{"version":3,"names":["ChakraProvider","Box","Button","Divider","Flex","Stack","StackDivider","Text","useColorModeValue","mode","React","HiPlus","Description","theme","PropTypes","jsxDEV","_jsxDEV","Card","props","children","as","py","bg","maxW","base","md","mx","px","rounded","lg","shadow","overflow","align","justify","fontWeight","fontSize","title","fileName","_jsxFileName","lineNumber","columnNumber","buttonText","colorScheme","onClick","clickFunction","minW","leftIcon","spacing","divider","_c","propTypes","string","func","node","defaultProps","$RefreshReg$","__docgenInfo","STORYBOOK_REACT_CLASSES","name","docgenInfo","path"],"sources":["/Users/laurinstahl/Documents/projects/reusable-project/app/src/theme/molecules/Card.jsx"],"sourcesContent":["import {\n  ChakraProvider,\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Stack,\n  StackDivider,\n  Text,\n  useColorModeValue as mode,\n} from '@chakra-ui/react'\nimport * as React from 'react'\nimport { HiPlus } from 'react-icons/hi'\nimport { Description } from '../components/Description'\nimport { theme } from '../index'\nimport PropTypes from 'prop-types';\n\n\nexport const Card = (props) => {\n  return (\n    <ChakraProvider theme={theme}>\n      <Box {...props} as=\"section\" py=\"12\" bg={mode('gray.100', 'gray.800')}>\n        <Box maxW={{ base: 'xl', md: '7xl' }} mx=\"auto\" px={{ md: '8' }}>\n          <Box\n            rounded={{ lg: 'lg' }}\n            bg={mode('white', 'gray.700')}\n            maxW=\"3xl\"\n            mx=\"auto\"\n            shadow=\"base\"\n            overflow=\"hidden\"\n          >\n            <Flex align=\"center\" justify=\"space-between\" px=\"6\" py=\"4\">\n              <Text as=\"h3\" fontWeight=\"bold\" fontSize=\"lg\">\n                {props.title}\n              </Text>\n              { props.buttonText && ( <Button colorScheme=\"blue\" onClick={props.clickFunction} minW=\"20\" leftIcon={<HiPlus />}>\n                {props.buttonText}\n              </Button>)}\n            </Flex>\n            <Divider />\n            <Stack spacing=\"6\" py=\"5\" px=\"8\" divider={<StackDivider />}>\n              {props.children}\n            </Stack>\n          </Box>\n        </Box>\n      </Box>\n    </ChakraProvider>\n  )\n}\n\nCard.propTypes = {\n  title: PropTypes.string,\n  buttonText: PropTypes.string,\n  clickFunction: PropTypes.func,\n  children: PropTypes.node,\n};\n\nCard.defaultProps = {\n  title: \"Default Title\",\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}